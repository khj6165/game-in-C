#include <stdio.h>
#include <windows.h>
#include <stdlib.h>



char map[15][450] = {
"###########################################################################__#__##################################################################################################################################################################################################################################################################_____####_####_###_###____####################################",
"##########################################################################_______###############################################################################################################_____________________________________________________###############################################################################################_#####_#_###__##_###_#######################################",
"########################################________________###################_____#########################################################################################################_________##############################################________________####################################################################################_####____###_#_#_###_##_####################################",
"#############################____________________________###################___######################################################################################################_____###########################################____________________________#################################################################################___####_##_###_##__###____####################################",
"_#########################___________________________________################_################################_____________#################################################_____________###############_#########################___________________________________#################################################_____________#################################################_______#####_###############",
"______________###########________________##__________________###########################################__________________________________________________________________________________________######______________###########____________#######_______________________#####################################________________________######################################____________________________######",
"________________#######_________________###______________________#################################_________________#####______________##########################________________________________######__________________#######___________##########_____________###____________##########################_________________#####______________##########################________________________________########",
"__________________####_________________###________________________##########################_________________#######___________________________###########____________________#########_____________####__________________####_________________#####_________________________#######################______________#__#######________________######_____###########____________________#########_____________####",
"___________________##_________________##_##____________________________##############_______________________######_____________________________________##_________________##################________________________######_##_______##________##_####____________________##______############_______________________######_____________________________________##_________________##################____________",
"____________________________________####################_____________________________________________#########################_____________________________________#########################________________________________________________###############__________________________________________________#########################_____________________________________#########################____________",
"_____________________________________###################___________________________________######################################################_________##############################################__________________________############################_____________________________________######################################################_________##############################################",
"##________________________________######################_________________######____________############################__###__###_###__###_#####################____###____###____########################_________________________#############################_________________######____________#############################################################################################################",
"######################################################_________########################################################_#_#_#_###_###_#_##_########################_######_######_##########################_____________#########################################_____#########################################################################################################################################",
"#######################################################################################################################_##_##_###_###_##_#_#####################____###____###____##############################################################################################################################################################################################################################",
"#######################################################################################################################_#####_###_###_###__########################_######_######_##############################################################################################################################################################################################################################",

};

int ap = 8;
int lastindex = 300;

void gotoxy(int x, int y)
{
	COORD pos;
	pos.X = x;
	pos.Y = y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);
}

void printAll(int index)
{
	system("cls");

	int x, y;

	for (x = 0; x < 15; x++)
	{
		for (y = index; y < index+15; y++)
		{
			if(map[x][y]=='#')
				printf("■");
			if (map[x][y] == '_')
				printf("__");
		}
		printf("\n");
	}

	gotoxy(0,ap);

	printf("♬");


	gotoxy(50, 15);
	printf("점수:%d", index * 10);

}

int main()
{
	system("mode con lines=30 cols=60");
	system("color BD");

	int t = 0;


	while (1)
	{
		if (GetAsyncKeyState(VK_UP) & 0x8001)
			ap--;

		if (GetAsyncKeyState(VK_DOWN) & 0x8001)
			ap++;

		printAll(t);
		t++;
		Sleep(30);

		if (t==lastindex)
		{
			system("cls");
			gotoxy(27, 9);
			printf("Win!");
			Sleep(5000);
			break;
		}

		if (map[ap][t]=='#')
		{
			system("cls");
			gotoxy(27, 9);
			printf("Game Over");
			Sleep(5000);
			break;
		}
	}


	return 0;
}
